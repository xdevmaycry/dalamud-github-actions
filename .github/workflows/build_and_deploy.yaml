name: Build

on:
  workflow_dispatch:
  push:
    branches: [main]
    tags:
      - '*'
  pull_request:
    branches: [main]

env:
  PROJECT_NAME: ${{ github.event.repository.name }}

permissions:
  contents: write
  
jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1.0.3

      - name: Download Dalamud
        run: |
          Invoke-WebRequest -Uri https://goatcorp.github.io/dalamud-distrib/net5/latest.zip -OutFile latest.zip
          Expand-Archive -Force latest.zip "$env:AppData\XIVLauncher\addon\Hooks\dev\"

      - uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.x'
    
      - name: Build
        run: |
          dotnet restore
          dotnet build --configuration Release --nologo --output bin/
        env:
          DOTNET_CLI_TELEMETRY_OUTPUT: true

      - name: Create artifact
        run: |
          Compress-Archive -Path "bin/*" -DestinationPath ${{ env.PROJECT_NAME }}.zip

      - name: Upload artifact
        uses: actions/upload-artifact@v2.2.1
        with:
          name: ${{ env.PROJECT_NAME }}
          path: ${{ env.PROJECT_NAME }}.zip
          if-no-files-found: error

  release:
    needs: build
    runs-on: windows-latest
    if: startsWith(github.ref, 'refs/tags/') || github.event_name == 'workflow_dispatch'

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2.2.0
        with:
          fetch-depth: 0

      - name: Download artifact
        uses: actions/download-artifact@v2
        id: download
        with:
          name: ${{ env.PROJECT_NAME }}
          
          
      - name: Show path
        run: |
          tree ${{ steps.download.outputs.download-path }} /f
          dir ${{ steps.download.outputs.download-path }} 
          
          

      - name: Get tag name
        id: tag
        uses: WyriHaximus/github-action-get-previous-tag@v1

      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          name: ${{ env.PROJECT_NAME }} ${{ steps.tag.outputs.tag }}
          tag_name: ${{ steps.tag.outputs.tag }}
          body: ${{ github.events.commits[0].message }}
          files: "**/${{ env.PROJECT_NAME }}.zip"
